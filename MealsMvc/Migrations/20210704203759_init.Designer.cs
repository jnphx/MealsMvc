// <auto-generated />
using System;
using MealsMvc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MealsMvc.Migrations
{
    [DbContext(typeof(MealsMvcContext))]
    [Migration("20210704203759_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MealsMvc.Models.Food", b =>
                {
                    b.Property<int>("FoodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CookedCupsConversion")
                        .HasColumnType("float");

                    b.Property<int>("GroceryAisleID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FoodID");

                    b.HasIndex("GroceryAisleID");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("MealsMvc.Models.GroceryAisle", b =>
                {
                    b.Property<int>("GroceryAisleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroceryAisleID");

                    b.ToTable("GroceryAisle");
                });

            modelBuilder.Entity("MealsMvc.Models.Ingredient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FoodID")
                        .HasColumnType("int");

                    b.Property<int>("MaxSize")
                        .HasColumnType("int");

                    b.Property<bool>("Optional")
                        .HasColumnType("bit");

                    b.Property<int>("PrepTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("RecipeID")
                        .HasColumnType("int");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<int>("SizeTypeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FoodID");

                    b.HasIndex("PrepTypeID");

                    b.HasIndex("RecipeID");

                    b.HasIndex("SizeTypeID");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("MealsMvc.Models.MealPlan", b =>
                {
                    b.Property<int>("MealPlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RoundOutMeals")
                        .HasColumnType("bit");

                    b.HasKey("MealPlanID");

                    b.ToTable("MealPlan");
                });

            modelBuilder.Entity("MealsMvc.Models.MealPlanRecipe", b =>
                {
                    b.Property<int>("MealPlanRecipeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MealPlanID")
                        .HasColumnType("int");

                    b.Property<double>("NumberBatches")
                        .HasColumnType("float");

                    b.Property<int>("RecipeID")
                        .HasColumnType("int");

                    b.HasKey("MealPlanRecipeID");

                    b.HasIndex("MealPlanID");

                    b.HasIndex("RecipeID");

                    b.ToTable("MealPlanRecipe");
                });

            modelBuilder.Entity("MealsMvc.Models.PrepType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PrepType");
                });

            modelBuilder.Entity("MealsMvc.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GrainServingsMissing")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberServings")
                        .HasColumnType("int");

                    b.Property<double>("PercentForYou")
                        .HasColumnType("float");

                    b.Property<int>("VegServingsMissing")
                        .HasColumnType("int");

                    b.HasKey("RecipeID");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("MealsMvc.Models.SizeType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SizeType");
                });

            modelBuilder.Entity("MealsMvc.Models.Step", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecipeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RecipeID");

                    b.ToTable("Step");
                });

            modelBuilder.Entity("MealsMvc.Models.UserSettings", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MealPlanID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MealPlanID");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("MealsMvc.Models.Food", b =>
                {
                    b.HasOne("MealsMvc.Models.GroceryAisle", "GroceryAisle")
                        .WithMany("Foods")
                        .HasForeignKey("GroceryAisleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroceryAisle");
                });

            modelBuilder.Entity("MealsMvc.Models.Ingredient", b =>
                {
                    b.HasOne("MealsMvc.Models.Food", "Food")
                        .WithMany("Ingredients")
                        .HasForeignKey("FoodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MealsMvc.Models.PrepType", "PrepType")
                        .WithMany()
                        .HasForeignKey("PrepTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MealsMvc.Models.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeID");

                    b.HasOne("MealsMvc.Models.SizeType", "SizeType")
                        .WithMany()
                        .HasForeignKey("SizeTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("PrepType");

                    b.Navigation("Recipe");

                    b.Navigation("SizeType");
                });

            modelBuilder.Entity("MealsMvc.Models.MealPlanRecipe", b =>
                {
                    b.HasOne("MealsMvc.Models.MealPlan", "MealPlan")
                        .WithMany("MealPlanRecipes")
                        .HasForeignKey("MealPlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MealsMvc.Models.Recipe", "Recipe")
                        .WithMany("MealPlanRecipes")
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MealPlan");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("MealsMvc.Models.Step", b =>
                {
                    b.HasOne("MealsMvc.Models.Recipe", null)
                        .WithMany("Steps")
                        .HasForeignKey("RecipeID");
                });

            modelBuilder.Entity("MealsMvc.Models.UserSettings", b =>
                {
                    b.HasOne("MealsMvc.Models.MealPlan", "MealPlan")
                        .WithMany("UserSettings")
                        .HasForeignKey("MealPlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MealPlan");
                });

            modelBuilder.Entity("MealsMvc.Models.Food", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("MealsMvc.Models.GroceryAisle", b =>
                {
                    b.Navigation("Foods");
                });

            modelBuilder.Entity("MealsMvc.Models.MealPlan", b =>
                {
                    b.Navigation("MealPlanRecipes");

                    b.Navigation("UserSettings");
                });

            modelBuilder.Entity("MealsMvc.Models.Recipe", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("MealPlanRecipes");

                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
